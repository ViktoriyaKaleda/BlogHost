@model BlogHost.Models.PageNavigationViewModels.BlogDetailsPageViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = "Details";
}
<div>
    <div class="text-center">
        <img class="rounded img-responsive" src="@Url.Content(Model.Blog.ImagePath ?? Model.Blog.BlogStyle.DefaultImagePath)" alt="">
    </div>
    @*@if ((await AuthorizationService.AuthorizeAsync(User, Model.Blog, "OwnerPolicy")).Succeeded
    || (await AuthorizationService.AuthorizeAsync(User, Model.Blog, "ModeratorPolicy")).Succeeded)
    {
    <h2>
        @Model.Blog.BlogName
        <a asp-action="Edit" asp-route-id="@Model.Blog.BlogId"><i class="fas fa-pencil-alt" style="cursor: pointer; color: black; margin-right: 1rem;"></i></a>
    </h2>
    @if ((await AuthorizationService.AuthorizeAsync(User, Model.Blog, "OwnerPolicy")).Succeeded)
        {
    <p>
        <a asp-action="Create" asp-controller="Posts" asp-route-blogId="@Model.Blog.BlogId">@Localizer["Create New Post"]</a>
    </p>
        }
    @if ((await AuthorizationService.AuthorizeAsync(User, Model.Blog, "ModeratorPolicy")).Succeeded)
        {
    <p>
        @Localizer["You are the moderator of this blog"]
    </p>
        }
    }
    else
    {
    <h2>
        @Model.Blog.BlogName
    </h2>
    }*@
</div>
@if (Model.Posts.Count() == 0 && Model.CurrentSearchText == null)
{
<h3>@Localizer["This blog is empty."]</h3>
}
else
{
<div class="src-area">
    <div>
        <button class="src-btn" type="submit"><i class="fas fa-search"></i></button>
        <input id="searchInput" class="src-input" type="text" placeholder="@Localizer["Search for..."]">
    </div>
</div>
}
<div class="container">
    <div class="row">
        <div class="col col-xs-12">
            <div id="postsContainer" class="blog-grids">
                <partial name="~/Views/Blog/_PostPartial.cshtml" model="@Model.Posts" />
            </div>
        </div>
    </div>
</div>
<div id="pageNavigationContainer">
    <partial name="~/Views/Shared/_PageNavigationPartial.cshtml" model="@Model.PageViewModel" />
</div>
@section Scripts {
    <script>
        $(document).ready(() => {
            $("#searchInput").keyup((e) => {
                if (e.key === "Enter") {
                    const t = $('#searchInput').val();
                    const url = "/Blogs/Details/" + @Model.Blog.BlogId + "?searchText=" + t;
                    window.location.assign(url);
                }

            });

            const searchText = "@Model.CurrentSearchText";
            if (searchText != "") {
                $('#searchInput').val(searchText);
                $('#searchInput').focus();
            }
            addNavigationListener();

        });

        function addNavigationListener() {
            var navigationButtons = document.getElementsByClassName("pageNavigationBtn");
            for (let i = 0; i < navigationButtons.length; i++) {
                var searchInputParam = "/Blogs/Details/" + @Model.Blog.BlogId
                    + "?page=" + navigationButtons[i].getAttribute('data-pageNumber');
                if ($('#searchInput').val() != "") {
                    searchInputParam += "&searchText=" + $('#searchInput').val();
                }
                navigationButtons[i].setAttribute('href', searchInputParam);
            };
        }

        document.body.style.background = "@Model.Blog.BlogStyle.BackgrounsColor";
        document.body.style.color = "@Model.Blog.BlogStyle.TitlesFontColor";
        document.body.style.fontFamily = "@Model.Blog.BlogStyle.TitlesFontName";
    </script>
}
