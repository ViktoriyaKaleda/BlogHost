@model BlogHosting.Models.BlogViewModels.BlogDetailsViewModel
@{
    ViewData["Title"] = "Details";
}
<div>
    @if ((await AuthorizationService.AuthorizeAsync(User, Model.Blog, "OwnerPolicy")).Succeeded)
    {
        <h2>
            @Model.Blog.BlogName
            <a asp-action="Edit" asp-route-id="@Model.Blog.BlogId"><i class="fas fa-pencil-alt" style="cursor: pointer; color: black; margin-right: 1rem;"></i></a>
        </h2>
        <p>
            <a asp-action="Create" asp-controller="Posts" asp-route-blogId="@Model.Blog.BlogId">Create New Post</a>
        </p>
    }
    else
    {
        <h2>
            @Model.Blog.BlogName
        </h2>
    }

</div>


@if (Model.Posts.Count == 0)
{
    <h3>This blog is empty</h3>
}
else
{
    <div class="src-area">
        <form>
            <button class="src-btn" type="submit"><i class="fas fa-search"></i></button>
            <input id="searchInput" class="src-input" type="text" placeholder="Search for...">
        </form>
    </div>
}

<div class="container">
    <div class="row">
        <div class="col col-xs-12">
            <div id="postsContainer" class="blog-grids">
                <partial name="~/Views/Posts/PostPartial.cshtml" model="@Model.Posts" />
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function Search(inputText) {
            $.ajax({
                url: @Model.Blog.BlogId + "/Search",
                type: 'POST',
                data: JSON.stringify(inputText),
                contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                success: (result) => {
                    $("#postsContainer").html(result);
                }
            })
        }

        $(document).ready(() => {
            $("#searchInput").keyup(() => {
                const t = $('#searchInput').val();
                Search(t);
            });
        });
    </script>
}
