@model BlogHosting.Models.BlogViewModels.BlogEditViewModel
@{
    ViewData["Title"] = "Edit";
}
<h2>Edit Blog</h2>
<p>
    <a asp-action="Delete" asp-route-id="@Model.BlogId">Delete this Blog</a>
</p>

<img class="rounded img-responsive center-block" id="targetImg" src="@Url.Content(Model.ImagePath ?? "~/images/slider-1.jpg")" alt="">

<hr />
<div class="row" style="background-color:@Model.CurrentStyle.BackgrounsColor">
    <div class="col-md-4">
        <form asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="BlogId" />
            <div class="form-group">
                <label asp-for="BlogName" class="control-label"></label>
                <input asp-for="BlogName" class="form-control" />
                <span asp-validation-for="BlogName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ImageFile" class="control-label"></label>
                <input asp-for="ImageFile" id="imageBrowse" class="custom-file-input" />
                <span asp-validation-for="ImageFile" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BlogStyleId" class="control-label"></label>
                <select asp-for="BlogStyleId" id="styleSelect" class="form-control" asp-items="@Model.Styles"></select>
                <span asp-validation-for="BlogStyleId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Moderators:</label>
                <div id="postsContainer">
                    <partial name="~/Views/Blogs/ModeratorsPartial.cshtml" model="@Model.Moderators" />
                </div>
                <dl id="addBtnContainer" class="dl-horizontal">
                    <dt><input id="newModerator" class="form-control" /></dt>
                    <dd><a id="addNewModerator" class="btn btn-primary">Add new</a></dd>
                    <content>
                        <div id="errorBox">
                            <span style="display: none;" id="errorMessage" name="errorMessage" class="text-danger" />
                        </div>
                        <div id="messageBox">
                            <span style="display: none;" id="infoMessage" name="message" class="text-info" />
                        </div>
                        <div id="successBox">
                            <span style="display: none;" id="successMessage" name="successMessage" class="text-success" />
                        </div>
                    </content>
                </dl>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>

        function AddModerator(inputText) {
            $.ajax({
                url: @Model.BlogId + "/AddModerator",
                type: 'POST',
                data: JSON.stringify(inputText),
                contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                success: (result) => {
                    $('#postsContainer').html(result);
                    ShowMessage("Moderator was added.", $('#successMessage'));
                    addDeleteListener();
                },
                error: function (jxqr, error, status) {
                    ShowMessage(jxqr.responseText, $('#errorMessage'));
                },
            })
        }

        function ShowMessage(msg, element) {
            element.text(msg);
            if (element.is(":hidden")) {
                element.toggle();
                setTimeout(function () {
                    element.fadeOut('fast');
                }, 3000);
            }
        }

        function DeleteModerator(inputText) {
            $.ajax({
                url: @Model.BlogId + "/DeleteModerator",
                type: 'POST',
                data: JSON.stringify(inputText),
                contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                success: (result) => {
                    $('#postsContainer').html(result);
                    ShowMessage("Moderator was deleted.", $('#infoMessage'));
                },
            })
        }

        function addDeleteListener() {
            var deleteButtons = document.getElementsByClassName("deleteModerator");
            for (let i = 0; i < deleteButtons.length; i++) {
                deleteButtons[i].addEventListener("click", function (event) {
                    const userName = this.getAttribute('data-username');
                    DeleteModerator(userName);
                    event.preventDefault();
                })
            };
        }

        var ReadImage = function (file) {

            var reader = new FileReader;
            var image = new Image;

            reader.readAsDataURL(file);
            reader.onload = function (_file) {

                image.src = _file.target.result;
                image.onload = function () {

                    var height = this.height;
                    var width = this.width;
                    var type = file.type;
                    var size = ~~(file.size / 1024) + "KB";

                    $("#targetImg").attr('src', _file.target.result);
                    $("#imagePreview").show();
                }
            }
        }

        var ClearPreview = function () {
            $("#imageBrowse").val('');
            $("#imagePreview").hide();
        }

        function SetStyle(styleId) {
            $.ajax({
                url: @Model.BlogId + "/SetStyle",
                type: 'POST',
                data: JSON.stringify(styleId),
                contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                success: (result) => {
                    console.log(result);
                    console.log(result.backgrounsColor);
                    const style = JSON.parse(result);
                    document.body.style.background = style.backgrounsColor;

                    document.body.style.color = style.titlesFontColor;
                    document.body.style.fontFamily = style.titlesFontName;
                    $('.navbar')[0].style.color = style.secondColor;
                    $('#targetImg').attr("src", style.defaultImagePath);
                },
            })
        }

        $(document).ready(() => {
            $('#addNewModerator').mousedown(() => {
                const t = $('#newModerator').val();
                AddModerator(t);
            });

            addDeleteListener();

            $("#imageBrowse").change(function () {

                var File = this.files;

                if (File && File[0]) {
                    ReadImage(File[0]);
                }
            })

            $('#styleSelect').change(function () {
                const styleId = $('#styleSelect').val();
                SetStyle(styleId);
            })
        });
    </script>
}
